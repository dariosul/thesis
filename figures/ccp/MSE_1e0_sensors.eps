%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.3.0.532 (R2014a). Operating System: Microsoft Windows 8 Single Language.
%%Title: D:\project\all range based results\ccp\MSE_1e0_sensors.eps
%%CreationDate: 11/22/2016  02:00:53
%%DocumentNeededFonts: Helvetica
%%+ Times-Roman
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   144   233   465   558
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   144   233   465   558
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1728 6696 csm

    0     0  3861  3897 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 3862 3898 rf
6 w
0 3240 3249 0 0 -3240 413 3483 4 MP
PP
-3249 0 0 3240 3249 0 0 -3240 413 3483 5 MP stroke
4 w
DO
0 sg
 467 3483 mt  467  243 L
 467  243 mt  467  243 L
 999 3483 mt  999  243 L
 999  243 mt  999  243 L
1532 3483 mt 1532  243 L
1532  243 mt 1532  243 L
2065 3483 mt 2065  243 L
2065  243 mt 2065  243 L
2597 3483 mt 2597  243 L
2597  243 mt 2597  243 L
3130 3483 mt 3130  243 L
3130  243 mt 3130  243 L
3662 3483 mt 3662  243 L
3662  243 mt 3662  243 L
 413 3483 mt 3662 3483 L
3662 3483 mt 3662 3483 L
 413 3123 mt 3662 3123 L
3662 3123 mt 3662 3123 L
 413 2763 mt 3662 2763 L
3662 2763 mt 3662 2763 L
 413 2403 mt 3662 2403 L
3662 2403 mt 3662 2403 L
 413 2043 mt 3662 2043 L
3662 2043 mt 3662 2043 L
 413 1683 mt 3662 1683 L
3662 1683 mt 3662 1683 L
 413 1323 mt 3662 1323 L
3662 1323 mt 3662 1323 L
 413  963 mt 3662  963 L
3662  963 mt 3662  963 L
 413  603 mt 3662  603 L
3662  603 mt 3662  603 L
 413  243 mt 3662  243 L
3662  243 mt 3662  243 L
SO
6 w
 413  243 mt 3662  243 L
 413 3483 mt 3662 3483 L
3662 3483 mt 3662  243 L
 413 3483 mt  413  243 L
 413 3483 mt 3662 3483 L
 413 3483 mt  413  243 L
 467 3483 mt  467 3450 L
 467  243 mt  467  275 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 434 3628 mt 
(4) s
 999 3483 mt  999 3450 L
 999  243 mt  999  275 L
 966 3628 mt 
(5) s
1532 3483 mt 1532 3450 L
1532  243 mt 1532  275 L
1499 3628 mt 
(6) s
2065 3483 mt 2065 3450 L
2065  243 mt 2065  275 L
2032 3628 mt 
(7) s
2597 3483 mt 2597 3450 L
2597  243 mt 2597  275 L
2564 3628 mt 
(8) s
3130 3483 mt 3130 3450 L
3130  243 mt 3130  275 L
3097 3628 mt 
(9) s
3662 3483 mt 3662 3450 L
3662  243 mt 3662  275 L
3596 3628 mt 
(10) s
 413 3483 mt  446 3483 L
3662 3483 mt 3630 3483 L
 313 3527 mt 
(0) s
 413 3123 mt  446 3123 L
3662 3123 mt 3630 3123 L
 213 3167 mt 
(0.5) s
 413 2763 mt  446 2763 L
3662 2763 mt 3630 2763 L
 313 2807 mt 
(1) s
 413 2403 mt  446 2403 L
3662 2403 mt 3630 2403 L
 213 2447 mt 
(1.5) s
 413 2043 mt  446 2043 L
3662 2043 mt 3630 2043 L
 313 2087 mt 
(2) s
 413 1683 mt  446 1683 L
3662 1683 mt 3630 1683 L
 213 1727 mt 
(2.5) s
 413 1323 mt  446 1323 L
3662 1323 mt 3630 1323 L
 313 1367 mt 
(3) s
 413  963 mt  446  963 L
3662  963 mt 3630  963 L
 213 1007 mt 
(3.5) s
 413  603 mt  446  603 L
3662  603 mt 3630  603 L
 313  647 mt 
(4) s
 413  243 mt  446  243 L
3662  243 mt 3630  243 L
 213  287 mt 
(4.5) s
 413  243 mt 3662  243 L
 413 3483 mt 3662 3483 L
3662 3483 mt 3662  243 L
 413 3483 mt  413  243 L
gs 413 243 3250 3241 rc
24 w
/c8 { 1.000000 0.000000 0.000000 sr} bdef
c8
1597 989 1066 1309 532 406 467 389 4 MP stroke
gr

24 w
c8
0 j
0 -58 -58 0 0 58 58 0 438 360 5 MP
DP
0 -58 -58 0 0 58 58 0 970 766 5 MP
DP
0 -58 -58 0 0 58 58 0 2036 2075 5 MP
DP
0 -58 -58 0 0 58 58 0 3633 3064 5 MP
DP
gs 413 243 3250 3241 rc
0 sg
1597 541 1066 198 532 1284 467 952 4 MP stroke
gr

0 sg
36 47 -36 47 -36 -47 36 -47 467 999 5 MP
DP
36 47 -36 47 -36 -47 36 -47 999 2283 5 MP
DP
36 47 -36 47 -36 -47 36 -47 2065 2481 5 MP
DP
36 47 -36 47 -36 -47 36 -47 3662 3022 5 MP
DP
gs 413 243 3250 3241 rc
/c9 { 0.000000 0.000000 1.000000 sr} bdef
c9
1597 182 1066 154 532 204 467 2584 4 MP stroke
gr

c9
-71 41 0 -82 71 41 420 2584 4 MP
DP
-71 41 0 -82 71 41 952 2788 4 MP
DP
-71 41 0 -82 71 41 2018 2942 4 MP
DP
-71 41 0 -82 71 41 3615 3124 4 MP
DP
gs 413 243 3250 3241 rc
gr

0 sg
%%IncludeResource: font Times-Roman
/Times-Roman /WindowsLatin1Encoding 144 FMSR

1442 3780 mt 
(number of sensors ) s
%%IncludeResource: font Times-Italic
/Times-Italic /WindowsLatin1Encoding 144 FMSR

2533 3780 mt 
(m) s
%%IncludeResource: font Times-Roman
/Times-Roman /WindowsLatin1Encoding 144 FMSR

 241 2159 mt  -90 rotate
(MSE) s
90 rotate
%%IncludeResource: font Symbol
/Symbol /WindowsLatin1Encoding 120 FMSR

1900  140 mt 
(s) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1972  140 mt 
( = 1) s
 396 3526 mt 
( ) s
3646  285 mt 
( ) s
6 w
1 sg
0 480 892 0 0 -480 2711 783 4 MP
PP
-892 0 0 480 892 0 0 -480 2711 783 5 MP stroke
4 w
DO
SO
6 w
0 sg
2711  303 mt 3603  303 L
2711  783 mt 3603  783 L
3603  783 mt 3603  303 L
2711  783 mt 2711  303 L
2711  783 mt 3603  783 L
2711  783 mt 2711  303 L
2711  303 mt 3603  303 L
2711  783 mt 3603  783 L
3603  783 mt 3603  303 L
2711  783 mt 2711  303 L
3175  438 mt 
(MLE\(x\)) s
gs 2711 303 893 481 rc
24 w
c8
357 0 2782 395 2 MP stroke
gr

24 w
c8
gs 2862 297 197 197 rc
0 -58 -58 0 0 58 58 0 2931 366 5 MP
DP
gr

gs 2711 303 893 481 rc
gr

0 sg
3175  586 mt 
(SR-LS) s
gs 2711 303 893 481 rc
357 0 2782 543 2 MP stroke
gs 2862 445 197 197 rc
36 47 -36 47 -36 -47 36 -47 2960 590 5 MP
DP
gr

gr

3175  734 mt 
(PCCP) s
gs 2711 303 893 481 rc
c9
357 0 2782 690 2 MP stroke
gr

c9
gs 2862 592 197 197 rc
-71 41 0 -82 71 41 2913 690 4 MP
DP
gr

gs 2711 303 893 481 rc
6 w
gr

6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
